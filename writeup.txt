In order to fulfill the first requirement I started by changing the third assignments table to hold map different words to urls. I did this by making the partition key one word in the title and the row key the URL. When the user types their query it runs a sql query to on each word in the entry and then I used LINQ to filter by the most words in the title of the URL. I rank them by finding the most occurances of the url in a list of all the results from the query If the user types a NBA players name it will show the stats for the player. I did this by adding a callback function to my php page that is hosted on AWS, and then adding an AJAX function to call it. For the query suggestions, I made the suggestions a drop down so when the user types the suggestions will show. The query suggestion is very slow, and it slows down the other methods by a lot. Without the query suggestion, the getting the results is almost immediate; with it, it takes a few minutes sometimes. Once the results are found they are added to a cache. My code is written in C# with good practices. I have a class library so that I can call methods to both my web role and my worker role. I have a URL class, to add the URLs to the queue. My PHP code is running on AWS. My cloud web role, table storage, and queue storage work on Azure, but the worker role does not because it cannot find my class library.
